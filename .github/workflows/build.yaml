name: Publish Docker image

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - 'main'
    - 'v*'
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # renovate: datasource=github-releases depName=AbdBarho/stable-diffusion-webui-docker
      SD_WEBUI_VER: 9.0.0
    steps:
      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=latest

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          # Set output parameters.
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      -
        # https://github.com/actions/checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          repository: AbdBarho/stable-diffusion-webui-docker
          ref: ${{ env.SD_WEBUI_VER }}
      -
        name: Patch Dockerfile to fix issue
        run: |
          cat << 'EOF' | patch -p1
          diff --git a/services/AUTOMATIC1111/Dockerfile b/services/AUTOMATIC1111/Dockerfile
          index d595784..15e2981 100644
          --- a/services/AUTOMATIC1111/Dockerfile
          +++ b/services/AUTOMATIC1111/Dockerfile
          @@ -39,6 +39,10 @@ ENV ROOT=/stable-diffusion-webui
           COPY --from=download /repositories/ ${ROOT}/repositories/
           RUN mkdir ${ROOT}/interrogate && cp ${ROOT}/repositories/clip-interrogator/clip_interrogator/data/* ${ROOT}/interrogate

          +RUN --mount=type=cache,target=/root/.cache/pip \
          +   pip uninstall -y typing_extensions && \
          +   pip install typing_extensions==4.11.0
          +
           RUN --mount=type=cache,target=/root/.cache/pip \
             pip install pyngrok xformers==0.0.26.post1 \
             git+https://github.com/TencentARC/GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379 \
          EOF
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker Buildx (no push)
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./services/AUTOMATIC1111
          file: ./services/AUTOMATIC1111/Dockerfile
          platforms: linux/amd64
          push: false
          tags: ${{ steps.prep.outputs.tags }}
          provenance: false
      -
        name: Docker Login
        if: success() && startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker Buildx (push)
        if: success() && startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./services/AUTOMATIC1111
          file: ./services/AUTOMATIC1111/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          provenance: false
